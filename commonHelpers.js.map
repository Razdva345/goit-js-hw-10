{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate;\n\nconst startButton = document.querySelector(\"[data-start]\");\nconst input = document.getElementById(\"datetime-picker\");\nconst options = {\n\tenableTime: true,\n\ttime_24hr: true,\n\tdefaultDate: new Date(),\n\tminuteIncrement: 1,\n\tonOpen(selectedDates, dateStr, instance) {\n\t\tinstance.clear();\n\t},\n\tonClose(selectedDates) {\n\t\tuserSelectedDate = selectedDates[0];\n\t\tvalidateSelectedDate();\n\t},\n};\nconst datePicker = flatpickr(\"#datetime-picker\", options);\nfunction validateSelectedDate() {\n\tconst currentDate = new Date();\n\tif (userSelectedDate <= currentDate) {\n\t\tiziToast.warning({\n\t\t\ttitle: \"Caution\",\n\t\t\tmessage: \"Please choose a date in the future\",\n\t\t});\n\t\tstartButton.disabled = true;\n\t} else {\n\t\tstartButton.disabled = false;\n\t}\n}\n\nfunction startTimer() {\n\tconst timerInterval = setInterval(updateTimer, 1000);\n\tfunction updateTimer() {\n\t\tconst currentDateTime = new Date();\n\t\tconst timeDifference = userSelectedDate - currentDateTime;\n\t\tstartButton.disabled = true;\n\n\t\tif (timeDifference <= 0) {\n\t\t\tclearInterval(timerInterval);\n\t\t\treturn;\n\t\t}\n\n\t\tconst { days, hours, minutes, seconds } = convertMs(timeDifference);\n\t\tdocument.querySelector(\"[data-days]\").textContent = addLeadingZero(days);\n\t\tdocument.querySelector(\"[data-hours]\").textContent = addLeadingZero(hours);\n\t\tdocument.querySelector(\"[data-minutes]\").textContent =\n\t\t\taddLeadingZero(minutes);\n\t\tdocument.querySelector(\"[data-seconds]\").textContent =\n\t\t\taddLeadingZero(seconds);\n\t}\n}\n\nfunction convertMs(ms) {\n\tconst second = 1000;\n\tconst minute = second * 60;\n\tconst hour = minute * 60;\n\tconst day = hour * 24;\n\n\tconst days = Math.floor(ms / day);\n\tconst hours = Math.floor((ms % day) / hour);\n\tconst minutes = Math.floor(((ms % day) % hour) / minute);\n\tconst seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n\treturn { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n\treturn value.toString().padStart(2, \"0\");\n}\nstartButton.addEventListener(\"click\", startTimer);\n"],"names":["userSelectedDate","startButton","options","selectedDates","dateStr","instance","validateSelectedDate","flatpickr","currentDate","iziToast","startTimer","timerInterval","updateTimer","currentDateTime","timeDifference","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"2GAKA,IAAIA,EAEJ,MAAMC,EAAc,SAAS,cAAc,cAAc,EAC3C,SAAS,eAAe,iBAAiB,EACvD,MAAMC,EAAU,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,OAAOC,EAAeC,EAASC,EAAU,CACxCA,EAAS,MAAK,CACd,EACD,QAAQF,EAAe,CACtBH,EAAmBG,EAAc,GACjCG,GACA,CACF,EACmBC,EAAU,mBAAoBL,CAAO,EACxD,SAASI,GAAuB,CAC/B,MAAME,EAAc,IAAI,KACpBR,GAAoBQ,GACvBC,EAAS,QAAQ,CAChB,MAAO,UACP,QAAS,oCACZ,CAAG,EACDR,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAEzB,CAEA,SAASS,GAAa,CACrB,MAAMC,EAAgB,YAAYC,EAAa,GAAI,EACnD,SAASA,GAAc,CACtB,MAAMC,EAAkB,IAAI,KACtBC,EAAiBd,EAAmBa,EAG1C,GAFAZ,EAAY,SAAW,GAEnBa,GAAkB,EAAG,CACxB,cAAcH,CAAa,EAC3B,MACA,CAED,KAAM,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAc,EAClE,SAAS,cAAc,aAAa,EAAE,YAAcM,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACxCI,EAAeH,CAAO,EACvB,SAAS,cAAc,gBAAgB,EAAE,YACxCG,EAAeF,CAAO,CACvB,CACF,CAEA,SAASC,EAAUE,EAAI,CAMtB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAEA,SAASE,EAAeE,EAAO,CAC9B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACxC,CACArB,EAAY,iBAAiB,QAASS,CAAU"}